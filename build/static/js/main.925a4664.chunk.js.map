{"version":3,"sources":["firebase.js","actions/types.js","actions/index.js","components/ColorPanel/ColorPanel.js","components/SidePanel/UserPanel.js","components/SidePanel/Channels.js","components/SidePanel/DirectMessages.js","components/SidePanel/Starred.js","components/SidePanel/SidePanel.js","components/Messages/MessagesHeader.js","components/Messages/FileModal.js","components/Messages/ProgressBar.js","components/Messages/MessageForm.js","components/Messages/Message.js","components/Messages/Typing.js","components/Messages/Skeleton.js","components/Messages/Messages.js","components/MetaPanel/MetaPanel.js","components/App.js","reportWebVitals.js","components/Auth/Login.js","components/Auth/Register.js","reducers/index.js","Spinner.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","SET_USER","CLEAR_USER","SET_CURRENT_CHANNEL","SET_PRIVATE_CHANNEL","SET_USER_POSTS","SET_COLORS","setCurrentChannel","channel","type","actionTypes","payload","currentChannel","setPrivateChannel","isPrivateChannel","ColorPanel","state","modal","primary","secondary","user","props","currentUser","usersRef","database","ref","userColors","removeListener","child","uid","off","addListener","userId","on","snap","unshift","val","setState","handleChangePrimary","color","hex","handleChangeSecondary","handleSaveColors","saveColors","push","update","then","console","log","closeModal","catch","err","error","displayUserColors","colors","length","map","i","Fragment","Divider","className","onClick","setColors","style","background","openModal","this","Sidebar","as","Menu","icon","inverted","vertical","visible","width","Button","size","Modal","basic","open","onClose","Header","Content","Segment","Label","content","onChange","Actions","Icon","name","React","Component","connect","primaryColor","secondaryColor","UserPanel","previewImage","croppedImage","blob","uploadedCroppedImage","storageRef","storage","userRef","auth","metadata","contentType","dropdownOptions","key","text","displayName","disabled","handleSignout","uploadCroppedImage","put","getDownloadURL","downloadURL","changeAvatar","updateProfile","photoURL","avatar","handleChange","event","file","target","files","reader","FileReader","readAsDataURL","addEventListener","result","handleCropImage","avatarEditor","getImageScaledToCanvas","toBlob","imageUrl","URL","createObjectURL","signOut","Grid","Column","Row","padding","margin","floated","Dropdown","trigger","Image","src","spaced","options","Input","fluid","label","centered","stackable","columns","node","image","height","border","scale","Channels","activeChannel","channels","channelName","channelDetails","channelsRef","messagesRef","notifications","firstLoad","addListeners","loadedChannels","setFirstChannel","addNotificationListener","channelId","handleNotifications","id","currentChannelId","lastTotal","index","findIndex","notification","total","numChildren","count","lastKnownTotal","removeListeners","forEach","firstChannel","setActiveChannel","addChannel","newChannel","details","createdBy","handleSubmit","preventDefault","isFormValid","value","changeChannel","clearNotifications","updatedNotifications","getNotificationCount","displayChannels","Item","opacity","active","Form","onSubmit","Field","DirectMessages","users","connectedRef","presenceRef","currentUserUid","loadedUsers","set","onDisconnect","remove","addStatusToUser","connected","updatedUsers","reduce","acc","concat","isUserOnline","status","channelData","getChannelId","currentUserId","fontStyle","Starred","starredChannels","starredChannel","channelToRemove","filteredChannels","filter","SidePanel","fixed","fontSize","MessagesHeader","numUniqueUsers","handleSearchChange","searchLoading","handleStar","isChannelStarred","clearing","marginBottom","Subheader","loading","placeholder","FileModal","authorized","addFile","sendFile","uploadFile","isAuthorized","mime","lookup","clearFile","filename","includes","ProgressBar","uploadState","percentUploaded","Progress","percent","progress","indicating","MessageForm","typingRef","uploadTask","message","errors","emojiPicker","handleKeyDown","keyCode","sendMessage","handleTogglePicker","handleAddEmoji","emoji","oldMessage","newMessage","colonToUnicode","colons","setTimeout","messageInputRef","focus","replace","x","emojiIndex","emojis","unicode","native","createMessage","fileUrl","timestamp","ServerValue","TIMESTAMP","getMessagesRef","getPath","pathToUpload","filePath","uuid","Math","round","bytesTransferred","totalBytes","snapshot","downloadUrl","sendFileMessage","cancel","onSelect","title","onKeyDown","labelPosition","some","Group","widths","isOwnMessage","isImage","hasOwnProperty","Message","Comment","Avatar","Author","Metadata","moment","fromNow","Text","Typing","Skeleton","Messages","privateChannel","privateMessagesRef","messages","messagesLoading","searchTerm","searchResults","typingUsers","listeners","listener","addToListeners","newListener","scrollToBottom","messagesEnd","scrollIntoView","behavior","addMessageListener","addTypingListeners","loadedMessages","countUniqueUsers","countUserPosts","addUserStarsListener","once","data","prevStarred","Object","keys","prevState","starChannel","handleSearchMessages","channelMessages","regex","RegExp","match","uniqueUsers","plural","userPosts","setUserPosts","displayMessages","displayChannelName","displayTypingUsers","display","alignItems","displayMessageSkeleton","Array","_","prevProps","MetaPanel","activeIndex","setActiveIndex","titleProps","newIndex","formatCount","num","displayTopPosters","posts","entries","sort","a","b","List","Description","slice","attached","Accordion","styled","Title","circular","marginLeft","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Login","email","password","displayErros","signInWithEmailAndPassword","signedInUser","textAlign","verticalAlign","maxWidth","stacked","iconPosition","to","Register","username","passwordConfirmation","isFormEmpty","isPasswordValid","createUserWithEmailAndPassword","createdUser","md5","saveUser","initialUserState","isLoading","initialChannelState","initialColorsState","rootReducer","combineReducers","action","Spinner","Dimmer","Loader","store","createStore","composeWithDevTools","Root","onAuthStateChanged","setUser","history","clearUser","exact","path","component","App","RootWithAuth","withRouter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.925a4664.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\nimport \"firebase/storage\";\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAVS3O9Glzq74kzbfOyQmaLlqe0PCKG43k\",\r\n  authDomain: \"slack-8bdc3.firebaseapp.com\",\r\n  projectId: \"slack-8bdc3\",\r\n  storageBucket: \"slack-8bdc3.appspot.com\",\r\n  messagingSenderId: \"1022081359494\",\r\n  appId: \"1:1022081359494:web:3c2379893d177ba1f53b07\",\r\n  measurementId: \"G-8WJ58LSV1Q\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n\r\n\r\nexport default firebase;\r\n","export const SET_USER ='SET_USER';\r\n\r\nexport const CLEAR_USER=\"CLEAR_USER\";\r\n\r\nexport const SET_CURRENT_CHANNEL=\"SET_CURRENT_CHANNEL\"\r\nexport const SET_PRIVATE_CHANNEL=\"SET_PRIVATE_CHANNEL\";\r\nexport const SET_USER_POSTS=\"SET_USER_POSTS\";\r\n\r\n\r\nexport const SET_COLORS=\"SET_COLORS\";\r\n","import * as actionTypes from \"./types\";\r\n\r\nexport const setUser = user =>{\r\n  return {\r\n    type:actionTypes.SET_USER,\r\n    payload:{\r\n      currentUser:user\r\n    }\r\n  }\r\n}\r\n\r\nexport const clearUser = () => {\r\n  return {\r\n    type:actionTypes.CLEAR_USER\r\n  }\r\n}\r\n\r\n\r\n\r\n/*channel */\r\n\r\nexport const setCurrentChannel = channel =>{\r\n  return {\r\n    type:actionTypes.SET_CURRENT_CHANNEL,\r\n    payload:{\r\n      currentChannel:channel\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const setPrivateChannel = isPrivateChannel =>{\r\n  return{\r\n    type:actionTypes.SET_PRIVATE_CHANNEL,\r\n    payload:{\r\n      isPrivateChannel\r\n    }\r\n  }\r\n}\r\n\r\nexport const setUserPosts = userPosts => {\r\n  return {\r\n    type: actionTypes.SET_USER_POSTS,\r\n    payload: {\r\n      userPosts\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport const setColors = (primaryColor,secondaryColor) =>{\r\n  return{\r\n    type:actionTypes.SET_COLORS,\r\n    payload:{\r\n      primaryColor,\r\n      secondaryColor\r\n    }\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport firebase from \"../../firebase\";\r\nimport { connect } from \"react-redux\";\r\nimport { setColors } from \"../../actions\";\r\n// prettier-ignore\r\nimport { Sidebar, Menu, Divider, Button, Modal, Icon, Label, Segment } from \"semantic-ui-react\";\r\nimport { SliderPicker } from \"react-color\";\r\n\r\nclass ColorPanel extends React.Component {\r\n  state = {\r\n    modal: false,\r\n    primary: \"\",\r\n    secondary: \"\",\r\n    user: this.props.currentUser,\r\n    usersRef: firebase.database().ref(\"users\"),\r\n    userColors: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.state.user) {\r\n      this.addListener(this.state.user.uid);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.removeListener();\r\n  }\r\n\r\n  removeListener = ()=>{\r\n    this.state.usersRef.child(`${this.state.user.uid}/colors`).off();\r\n  }\r\n\r\n\r\n  addListener = userId => {\r\n    let userColors = [];\r\n    this.state.usersRef.child(`${userId}/colors`).on(\"child_added\", snap => {\r\n      userColors.unshift(snap.val());\r\n      this.setState({ userColors });\r\n    });\r\n  };\r\n\r\n  handleChangePrimary = color => this.setState({ primary: color.hex });\r\n\r\n  handleChangeSecondary = color => this.setState({ secondary: color.hex });\r\n\r\n  handleSaveColors = () => {\r\n    if (this.state.primary && this.state.secondary) {\r\n      this.saveColors(this.state.primary, this.state.secondary);\r\n    }\r\n  };\r\n\r\n  saveColors = (primary, secondary) => {\r\n    this.state.usersRef\r\n      .child(`${this.state.user.uid}/colors`)\r\n      .push()\r\n      .update({\r\n        primary,\r\n        secondary\r\n      })\r\n      .then(() => {\r\n        console.log(\"Colors added\");\r\n        this.closeModal();\r\n      })\r\n      .catch(err => console.error(err));\r\n  };\r\n\r\n  displayUserColors = colors =>\r\n    colors.length > 0 &&\r\n    colors.map((color, i) => (\r\n      <React.Fragment key={i}>\r\n        <Divider />\r\n        <div\r\n          className=\"color__container\"\r\n          onClick={() => this.props.setColors(color.primary, color.secondary)}\r\n        >\r\n          <div className=\"color__square\" style={{ background: color.primary }}>\r\n            <div\r\n              className=\"color__overlay\"\r\n              style={{ background: color.secondary }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    ));\r\n\r\n  openModal = () => this.setState({ modal: true });\r\n\r\n  closeModal = () => this.setState({ modal: false });\r\n\r\n  render() {\r\n    const { modal, primary, secondary, userColors } = this.state;\r\n\r\n    return (\r\n      <Sidebar\r\n        as={Menu}\r\n        icon=\"labeled\"\r\n        inverted\r\n        vertical\r\n        visible\r\n        width=\"very thin\"\r\n      >\r\n        <Divider />\r\n        <Button icon=\"add\" size=\"small\" color=\"blue\" onClick={this.openModal} />\r\n        {this.displayUserColors(userColors)}\r\n\r\n        {/* Color Picker Modal */}\r\n        <Modal basic open={modal} onClose={this.closeModal}>\r\n          <Modal.Header>Choose App Colors</Modal.Header>\r\n          <Modal.Content>\r\n            <Segment inverted>\r\n              <Label content=\"Primary Color\" />\r\n              <SliderPicker\r\n                color={primary}\r\n                onChange={this.handleChangePrimary}\r\n              />\r\n            </Segment>\r\n\r\n            <Segment inverted>\r\n              <Label content=\"Secondary Color\" />\r\n              <SliderPicker\r\n                color={secondary}\r\n                onChange={this.handleChangeSecondary}\r\n              />\r\n            </Segment>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button color=\"green\" inverted onClick={this.handleSaveColors}>\r\n              <Icon name=\"checkmark\" /> Save Colors\r\n            </Button>\r\n            <Button color=\"red\" inverted onClick={this.closeModal}>\r\n              <Icon name=\"remove\" /> Cancel\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      </Sidebar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  { setColors }\r\n)(ColorPanel);\r\n","import React from \"react\";\r\nimport firebase from \"../../firebase\";\r\nimport AvatarEditor from \"react-avatar-editor\";\r\n// prettier-ignore\r\nimport { Grid, Header, Icon, Dropdown, Image, Modal, Input, Button } from \"semantic-ui-react\";\r\n\r\nclass UserPanel extends React.Component {\r\n  state = {\r\n    user: this.props.currentUser,\r\n    modal: false,\r\n    previewImage: \"\",\r\n    croppedImage: \"\",\r\n    blob: null,\r\n    uploadedCroppedImage: \"\",\r\n    storageRef: firebase.storage().ref(),\r\n    userRef: firebase.auth().currentUser,\r\n    usersRef: firebase.database().ref(\"users\"),\r\n    metadata: {\r\n      contentType: \"image/jpeg\"\r\n    }\r\n  };\r\n\r\n  openModal = () => this.setState({ modal: true });\r\n\r\n  closeModal = () => this.setState({ modal: false });\r\n\r\n  dropdownOptions = () => [\r\n    {\r\n      key: \"user\",\r\n      text: (\r\n        <span>\r\n          Signed in as <strong>{this.state.user.displayName}</strong>\r\n        </span>\r\n      ),\r\n      disabled: true\r\n    },\r\n    {\r\n      key: \"avatar\",\r\n      text: <span onClick={this.openModal}>Change Avatar</span>\r\n    },\r\n    {\r\n      key: \"signout\",\r\n      text: <span onClick={this.handleSignout}>Sign Out</span>\r\n    }\r\n  ];\r\n\r\n  uploadCroppedImage = () => {\r\n    const { storageRef, userRef, blob, metadata } = this.state;\r\n\r\n    storageRef\r\n      .child(`avatars/user-${userRef.uid}`)\r\n      .put(blob, metadata)\r\n      .then(snap => {\r\n        snap.ref.getDownloadURL().then(downloadURL => {\r\n          this.setState({ uploadedCroppedImage: downloadURL }, () =>\r\n            this.changeAvatar()\r\n          );\r\n        });\r\n      });\r\n  };\r\n\r\n  changeAvatar = () => {\r\n    this.state.userRef\r\n      .updateProfile({\r\n        photoURL: this.state.uploadedCroppedImage\r\n      })\r\n      .then(() => {\r\n        console.log(\"PhotoURL updated\");\r\n        this.closeModal();\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n      });\r\n\r\n    this.state.usersRef\r\n      .child(this.state.user.uid)\r\n      .update({ avatar: this.state.uploadedCroppedImage })\r\n      .then(() => {\r\n        console.log(\"User avatar updated\");\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  handleChange = event => {\r\n    const file = event.target.files[0];\r\n    const reader = new FileReader();\r\n\r\n    if (file) {\r\n      reader.readAsDataURL(file);\r\n      reader.addEventListener(\"load\", () => {\r\n        this.setState({ previewImage: reader.result });\r\n      });\r\n    }\r\n  };\r\n\r\n  handleCropImage = () => {\r\n    if (this.avatarEditor) {\r\n      this.avatarEditor.getImageScaledToCanvas().toBlob(blob => {\r\n        let imageUrl = URL.createObjectURL(blob);\r\n        this.setState({\r\n          croppedImage: imageUrl,\r\n          blob\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  handleSignout = () => {\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => console.log(\"signed out!\"));\r\n  };\r\n\r\n  render() {\r\n    const { user, modal, previewImage, croppedImage } = this.state;\r\n    const { primaryColor } = this.props;\r\n\r\n    return (\r\n      <Grid style={{ background: primaryColor }}>\r\n        <Grid.Column>\r\n          <Grid.Row style={{ padding: \"1.2em\", margin: 0 }}>\r\n            {/* App Header */}\r\n            <Header inverted floated=\"left\" as=\"h2\">\r\n              <Icon name=\"code\" />\r\n              <Header.Content>DevChat</Header.Content>\r\n            </Header>\r\n\r\n            {/* User Dropdown  */}\r\n            <Header style={{ padding: \"0.25em\" }} as=\"h4\" inverted>\r\n              <Dropdown\r\n                trigger={\r\n                  <span>\r\n                    <Image src={user.photoURL} spaced=\"right\" avatar />\r\n                    {user.displayName}\r\n                  </span>\r\n                }\r\n                options={this.dropdownOptions()}\r\n              />\r\n            </Header>\r\n          </Grid.Row>\r\n\r\n          {/* Change User Avatar Modal   */}\r\n          <Modal basic open={modal} onClose={this.closeModal}>\r\n            <Modal.Header>Change Avatar</Modal.Header>\r\n            <Modal.Content>\r\n              <Input\r\n                onChange={this.handleChange}\r\n                fluid\r\n                type=\"file\"\r\n                label=\"New Avatar\"\r\n                name=\"previewImage\"\r\n              />\r\n              <Grid centered stackable columns={2}>\r\n                <Grid.Row centered>\r\n                  <Grid.Column className=\"ui center aligned grid\">\r\n                    {previewImage && (\r\n                      <AvatarEditor\r\n                        ref={node => (this.avatarEditor = node)}\r\n                        image={previewImage}\r\n                        width={120}\r\n                        height={120}\r\n                        border={50}\r\n                        scale={1.2}\r\n                      />\r\n                    )}\r\n                  </Grid.Column>\r\n                  <Grid.Column>\r\n                    {croppedImage && (\r\n                      <Image\r\n                        style={{ margin: \"3.5em auto\" }}\r\n                        width={100}\r\n                        height={100}\r\n                        src={croppedImage}\r\n                      />\r\n                    )}\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              </Grid>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n              {croppedImage && (\r\n                <Button\r\n                  color=\"green\"\r\n                  inverted\r\n                  onClick={this.uploadCroppedImage}\r\n                >\r\n                  <Icon name=\"save\" /> Change Avatar\r\n                </Button>\r\n              )}\r\n              <Button color=\"green\" inverted onClick={this.handleCropImage}>\r\n                <Icon name=\"image\" /> Preview\r\n              </Button>\r\n              <Button color=\"red\" inverted onClick={this.closeModal}>\r\n                <Icon name=\"remove\" /> Cancel\r\n              </Button>\r\n            </Modal.Actions>\r\n          </Modal>\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserPanel;\r\n","import React from \"react\";\r\nimport firebase from \"../../firebase\";\r\nimport { connect } from \"react-redux\";\r\nimport { setCurrentChannel, setPrivateChannel } from \"../../actions\";\r\nimport {\r\n  Menu,\r\n  Icon,\r\n  Modal,\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Label\r\n} from \"semantic-ui-react\";\r\n\r\nclass Channels extends React.Component {\r\n  state = {\r\n    activeChannel: \"\",\r\n    user: this.props.currentUser,\r\n    channel: null,\r\n    channels: [],\r\n    channelName: \"\",\r\n    channelDetails: \"\",\r\n    channelsRef: firebase.database().ref(\"channels\"),\r\n    messagesRef: firebase.database().ref(\"messages\"),\r\n    notifications: [],\r\n    modal: false,\r\n    firstLoad: true\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.addListeners();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.removeListeners();\r\n  }\r\n\r\n  addListeners = () => {\r\n    let loadedChannels = [];\r\n    this.state.channelsRef.on(\"child_added\", snap => {\r\n      loadedChannels.push(snap.val());\r\n      this.setState({ channels: loadedChannels }, () => this.setFirstChannel());\r\n      this.addNotificationListener(snap.key);\r\n    });\r\n  };\r\n\r\n  addNotificationListener = channelId => {\r\n    this.state.messagesRef.child(channelId).on(\"value\", snap => {\r\n      if (this.state.channel) {\r\n        this.handleNotifications(\r\n          channelId,\r\n          this.state.channel.id,\r\n          this.state.notifications,\r\n          snap\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  handleNotifications = (channelId, currentChannelId, notifications, snap) => {\r\n    let lastTotal = 0;\r\n\r\n    let index = notifications.findIndex(\r\n      notification => notification.id === channelId\r\n    );\r\n\r\n    if (index !== -1) {\r\n      if (channelId !== currentChannelId) {\r\n        lastTotal = notifications[index].total;\r\n\r\n        if (snap.numChildren() - lastTotal > 0) {\r\n          notifications[index].count = snap.numChildren() - lastTotal;\r\n        }\r\n      }\r\n      notifications[index].lastKnownTotal = snap.numChildren();\r\n    } else {\r\n      notifications.push({\r\n        id: channelId,\r\n        total: snap.numChildren(),\r\n        lastKnownTotal: snap.numChildren(),\r\n        count: 0\r\n      });\r\n    }\r\n\r\n    this.setState({ notifications });\r\n  };\r\n\r\n  removeListeners = () => {\r\n    this.state.channelsRef.off();\r\n    this.state.channels.forEach(channel =>{\r\n      this.state.messagesRef.child(channel.id).off();\r\n    })\r\n  };\r\n\r\n  setFirstChannel = () => {\r\n    const firstChannel = this.state.channels[0];\r\n    if (this.state.firstLoad && this.state.channels.length > 0) {\r\n      this.props.setCurrentChannel(firstChannel);\r\n      this.setActiveChannel(firstChannel);\r\n      this.setState({ channel: firstChannel });\r\n    }\r\n    this.setState({ firstLoad: false });\r\n  };\r\n\r\n  addChannel = () => {\r\n    const { channelsRef, channelName, channelDetails, user } = this.state;\r\n\r\n    const key = channelsRef.push().key;\r\n\r\n    const newChannel = {\r\n      id: key,\r\n      name: channelName,\r\n      details: channelDetails,\r\n      createdBy: {\r\n        name: user.displayName,\r\n        avatar: user.photoURL\r\n      }\r\n    };\r\n\r\n    channelsRef\r\n      .child(key)\r\n      .update(newChannel)\r\n      .then(() => {\r\n        this.setState({ channelName: \"\", channelDetails: \"\" });\r\n        this.closeModal();\r\n        console.log(\"channel added\");\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (this.isFormValid(this.state)) {\r\n      this.addChannel();\r\n    }\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  changeChannel = channel => {\r\n    this.setActiveChannel(channel);\r\n    this.clearNotifications();\r\n    this.props.setCurrentChannel(channel);\r\n    this.props.setPrivateChannel(false);\r\n    this.setState({ channel });\r\n  };\r\n\r\n  clearNotifications = () => {\r\n    let index = this.state.notifications.findIndex(\r\n      notification => notification.id === this.state.channel.id\r\n    );\r\n\r\n    if (index !== -1) {\r\n      let updatedNotifications = [...this.state.notifications];\r\n      updatedNotifications[index].total = this.state.notifications[\r\n        index\r\n      ].lastKnownTotal;\r\n      updatedNotifications[index].count = 0;\r\n      this.setState({ notifications: updatedNotifications });\r\n    }\r\n  };\r\n\r\n  setActiveChannel = channel => {\r\n    this.setState({ activeChannel: channel.id });\r\n  };\r\n\r\n  getNotificationCount = channel => {\r\n    let count = 0;\r\n\r\n    this.state.notifications.forEach(notification => {\r\n      if (notification.id === channel.id) {\r\n        count = notification.count;\r\n      }\r\n    });\r\n\r\n    if (count > 0) return count;\r\n  };\r\n\r\n  displayChannels = channels =>\r\n    channels.length > 0 &&\r\n    channels.map(channel => (\r\n      <Menu.Item\r\n        key={channel.id}\r\n        onClick={() => this.changeChannel(channel)}\r\n        name={channel.name}\r\n        style={{ opacity: 0.7 }}\r\n        active={channel.id === this.state.activeChannel}\r\n      >\r\n        {this.getNotificationCount(channel) && (\r\n          <Label color=\"red\">{this.getNotificationCount(channel)}</Label>\r\n        )}\r\n        # {channel.name}\r\n      </Menu.Item>\r\n    ));\r\n\r\n  isFormValid = ({ channelName, channelDetails }) =>\r\n    channelName && channelDetails;\r\n\r\n  openModal = () => this.setState({ modal: true });\r\n\r\n  closeModal = () => this.setState({ modal: false });\r\n\r\n  render() {\r\n    const { channels, modal } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Menu.Menu className=\"menu\">\r\n          <Menu.Item>\r\n            <span>\r\n              <Icon name=\"exchange\" /> CHANNELS\r\n            </span>{\" \"}\r\n            ({channels.length}) <Icon name=\"add\" onClick={this.openModal} />\r\n          </Menu.Item>\r\n          {this.displayChannels(channels)}\r\n        </Menu.Menu>\r\n\r\n        {/* Add Channel Modal */}\r\n        <Modal basic open={modal} onClose={this.closeModal}>\r\n          <Modal.Header>Add a Channel</Modal.Header>\r\n          <Modal.Content>\r\n            <Form onSubmit={this.handleSubmit}>\r\n              <Form.Field>\r\n                <Input\r\n                  fluid\r\n                  label=\"Name of Channel\"\r\n                  name=\"channelName\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <Input\r\n                  fluid\r\n                  label=\"About the Channel\"\r\n                  name=\"channelDetails\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n\r\n          <Modal.Actions>\r\n            <Button color=\"green\" inverted onClick={this.handleSubmit}>\r\n              <Icon name=\"checkmark\" /> Add\r\n            </Button>\r\n            <Button color=\"red\" inverted onClick={this.closeModal}>\r\n              <Icon name=\"remove\" /> Cancel\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  { setCurrentChannel, setPrivateChannel }\r\n)(Channels);\r\n","import React from \"react\";\r\nimport firebase from \"../../firebase\";\r\nimport { connect } from \"react-redux\";\r\nimport { setCurrentChannel, setPrivateChannel } from \"../../actions\";\r\nimport { Menu, Icon } from \"semantic-ui-react\";\r\n\r\nclass DirectMessages extends React.Component {\r\n  state = {\r\n    activeChannel: \"\",\r\n    user: this.props.currentUser,\r\n    users: [],\r\n    usersRef: firebase.database().ref(\"users\"),\r\n    connectedRef: firebase.database().ref(\".info/connected\"),\r\n    presenceRef: firebase.database().ref(\"presence\")\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.state.user) {\r\n      this.addListeners(this.state.user.uid);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.removeListeners();\r\n  }\r\n\r\n  removeListeners = () =>{\r\n    this.state.usersRef.off();\r\n    this.state.presenceRef.off();\r\n    this.state.connectedRef.off();\r\n  }\r\n\r\n  addListeners = currentUserUid => {\r\n    let loadedUsers = [];\r\n    this.state.usersRef.on(\"child_added\", snap => {\r\n      if (currentUserUid !== snap.key) {\r\n        let user = snap.val();\r\n        user[\"uid\"] = snap.key;\r\n        user[\"status\"] = \"offline\";\r\n        loadedUsers.push(user);\r\n        this.setState({ users: loadedUsers });\r\n      }\r\n    });\r\n\r\n    this.state.connectedRef.on(\"value\", snap => {\r\n      if (snap.val() === true) {\r\n        const ref = this.state.presenceRef.child(currentUserUid);\r\n        ref.set(true);\r\n        ref.onDisconnect().remove(err => {\r\n          if (err !== null) {\r\n            console.error(err);\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    this.state.presenceRef.on(\"child_added\", snap => {\r\n      if (currentUserUid !== snap.key) {\r\n        this.addStatusToUser(snap.key);\r\n      }\r\n    });\r\n\r\n    this.state.presenceRef.on(\"child_removed\", snap => {\r\n      if (currentUserUid !== snap.key) {\r\n        this.addStatusToUser(snap.key, false);\r\n      }\r\n    });\r\n  };\r\n\r\n  addStatusToUser = (userId, connected = true) => {\r\n    const updatedUsers = this.state.users.reduce((acc, user) => {\r\n      if (user.uid === userId) {\r\n        user[\"status\"] = `${connected ? \"online\" : \"offline\"}`;\r\n      }\r\n      return acc.concat(user);\r\n    }, []);\r\n    this.setState({ users: updatedUsers });\r\n  };\r\n\r\n  isUserOnline = user => user.status === \"online\";\r\n\r\n  changeChannel = user => {\r\n    const channelId = this.getChannelId(user.uid);\r\n    const channelData = {\r\n      id: channelId,\r\n      name: user.name\r\n    };\r\n    this.props.setCurrentChannel(channelData);\r\n    this.props.setPrivateChannel(true);\r\n    this.setActiveChannel(user.uid);\r\n  };\r\n\r\n  getChannelId = userId => {\r\n    const currentUserId = this.state.user.uid;\r\n    return userId < currentUserId\r\n      ? `${userId}/${currentUserId}`\r\n      : `${currentUserId}/${userId}`;\r\n  };\r\n\r\n  setActiveChannel = userId => {\r\n    this.setState({ activeChannel: userId });\r\n  };\r\n\r\n  render() {\r\n    const { users, activeChannel } = this.state;\r\n\r\n    return (\r\n      <Menu.Menu className=\"menu\">\r\n        <Menu.Item>\r\n          <span>\r\n            <Icon name=\"mail\" /> DIRECT MESSAGES\r\n          </span>{\" \"}\r\n          ({users.length})\r\n        </Menu.Item>\r\n        {users.map(user => (\r\n          <Menu.Item\r\n            key={user.uid}\r\n            active={user.uid === activeChannel}\r\n            onClick={() => this.changeChannel(user)}\r\n            style={{ opacity: 0.7, fontStyle: \"italic\" }}\r\n          >\r\n            <Icon\r\n              name=\"circle\"\r\n              color={this.isUserOnline(user) ? \"green\" : \"red\"}\r\n            />\r\n            @ {user.name}\r\n          </Menu.Item>\r\n        ))}\r\n      </Menu.Menu>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  { setCurrentChannel, setPrivateChannel }\r\n)(DirectMessages);\r\n","import React from \"react\";\r\nimport firebase from \"../../firebase\";\r\nimport { connect } from \"react-redux\";\r\nimport { setCurrentChannel, setPrivateChannel } from \"../../actions\";\r\nimport { Menu, Icon } from \"semantic-ui-react\";\r\n\r\nclass Starred extends React.Component {\r\n  state = {\r\n    user: this.props.currentUser,\r\n    usersRef: firebase.database().ref(\"users\"),\r\n    activeChannel: \"\",\r\n    starredChannels: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.state.user) {\r\n      this.addListeners(this.state.user.uid);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.removeListener();\r\n  }\r\n\r\n  removeListener = () =>{\r\n    this.state.usersRef.child(`${this.state.user.uid}/starred`).off();\r\n  }\r\n\r\n  addListeners = userId => {\r\n    this.state.usersRef\r\n      .child(userId)\r\n      .child(\"starred\")\r\n      .on(\"child_added\", snap => {\r\n        const starredChannel = { id: snap.key, ...snap.val() };\r\n        this.setState({\r\n          starredChannels: [...this.state.starredChannels, starredChannel]\r\n        });\r\n      });\r\n\r\n    this.state.usersRef\r\n      .child(userId)\r\n      .child(\"starred\")\r\n      .on(\"child_removed\", snap => {\r\n        const channelToRemove = { id: snap.key, ...snap.val() };\r\n        const filteredChannels = this.state.starredChannels.filter(channel => {\r\n          return channel.id !== channelToRemove.id;\r\n        });\r\n        this.setState({ starredChannels: filteredChannels });\r\n      });\r\n  };\r\n\r\n  setActiveChannel = channel => {\r\n    this.setState({ activeChannel: channel.id });\r\n  };\r\n\r\n  changeChannel = channel => {\r\n    this.setActiveChannel(channel);\r\n    this.props.setCurrentChannel(channel);\r\n    this.props.setPrivateChannel(false);\r\n  };\r\n\r\n  displayChannels = starredChannels =>\r\n    starredChannels.length > 0 &&\r\n    starredChannels.map(channel => (\r\n      <Menu.Item\r\n        key={channel.id}\r\n        onClick={() => this.changeChannel(channel)}\r\n        name={channel.name}\r\n        style={{ opacity: 0.7 }}\r\n        active={channel.id === this.state.activeChannel}\r\n      >\r\n        # {channel.name}\r\n      </Menu.Item>\r\n    ));\r\n\r\n  render() {\r\n    const { starredChannels } = this.state;\r\n\r\n    return (\r\n      <Menu.Menu className=\"menu\">\r\n        <Menu.Item>\r\n          <span>\r\n            <Icon name=\"star\" /> STARRED\r\n          </span>{\" \"}\r\n          ({starredChannels.length})\r\n        </Menu.Item>\r\n        {this.displayChannels(starredChannels)}\r\n      </Menu.Menu>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  { setCurrentChannel, setPrivateChannel }\r\n)(Starred);\r\n","import React from \"react\";\r\nimport {Menu} from \"semantic-ui-react\";\r\nimport UserPanel from \"./UserPanel\"\r\nimport Channels from \"./Channels\";\r\nimport DirectMessages from \"./DirectMessages\";\r\nimport Starred from \"./Starred\";\r\n\r\nclass SidePanel extends React.Component{\r\n  render(){\r\n    const {currentUser,primaryColor} = this.props;\r\n    return(\r\n      <Menu\r\n        size=\"large\"\r\n        inverted\r\n        fixed=\"left\"\r\n        vertical\r\n        style={{background:primaryColor,fontSize:\"1.2rem\"}}\r\n\r\n       >\r\n\r\n        <UserPanel primaryColor={primaryColor} currentUser={currentUser} />\r\n        <Starred currentUser={currentUser} />\r\n        <Channels currentUser={currentUser} />\r\n        <DirectMessages currentUser={currentUser} />\r\n\r\n       </Menu>\r\n\r\n\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default SidePanel;\r\n","import React from \"react\";\r\nimport { Header, Segment, Input, Icon } from \"semantic-ui-react\";\r\n\r\nclass MessagesHeader extends React.Component {\r\n  render() {\r\n    const {\r\n      channelName,\r\n      numUniqueUsers,\r\n      handleSearchChange,\r\n      searchLoading,\r\n      isPrivateChannel,\r\n      handleStar,\r\n      isChannelStarred\r\n    } = this.props;\r\n\r\n    return (\r\n      <Segment clearing>\r\n        {/* Channel Title */}\r\n        <Header fluid=\"true\" as=\"h2\" floated=\"left\" style={{ marginBottom: 0 }}>\r\n          <span>\r\n            {channelName}\r\n            {!isPrivateChannel && (\r\n              <Icon\r\n                onClick={handleStar}\r\n                name={isChannelStarred ? \"star\" : \"star outline\"}\r\n                color={isChannelStarred ? \"yellow\" : \"black\"}\r\n              />\r\n            )}\r\n          </span>\r\n          <Header.Subheader>{numUniqueUsers}</Header.Subheader>\r\n        </Header>\r\n\r\n        {/* Channel Search Input */}\r\n        <Header floated=\"right\">\r\n          <Input\r\n            loading={searchLoading}\r\n            onChange={handleSearchChange}\r\n            size=\"mini\"\r\n            icon=\"search\"\r\n            name=\"searchTerm\"\r\n            placeholder=\"Search Messages\"\r\n          />\r\n        </Header>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MessagesHeader;\r\n","import React from \"react\";\r\n\r\nimport mime from \"mime-types\";\r\nimport {Modal,Input,Button,Icon} from \"semantic-ui-react\";\r\n\r\nclass FileModal extends React.Component{\r\n\r\n  state={\r\n    file:null,\r\n    authorized:['image/jpeg','image/png']\r\n  }\r\n\r\n  addFile =event =>{\r\n    const file=event.target.files[0];\r\n    if(file){\r\n      this.setState({file});\r\n    }\r\n  }\r\n\r\n  sendFile = () =>{\r\n    const {file} = this.state;\r\n    const {uploadFile,closeModal} =this.props;\r\n    if(file!==null){\r\n      if(this.isAuthorized(file.name)){\r\n        const metadata={contentType:mime.lookup(file.name)}\r\n        uploadFile(file,metadata);\r\n        closeModal();\r\n        this.clearFile();\r\n      }\r\n    }\r\n  }\r\n\r\n  isAuthorized = filename => this.state.authorized\r\n  .includes(mime.lookup(filename));\r\n\r\n  clearFile = ()=>{\r\n    this.setState({file:null})\r\n  }\r\n\r\n  render(){\r\n    const {modal,closeModal}=this.props;\r\n    return(\r\n      <Modal basic open={modal} onClose={closeModal}>\r\n        <Modal.Header>Select Image File</Modal.Header>\r\n        <Modal.Content>\r\n          <Input fluid\r\n            onChange={this.addFile}\r\n            label=\"File types: jpg,png\"\r\n            name=\"file\"\r\n            type=\"file\"\r\n            />\r\n        </Modal.Content>\r\n\r\n        <Modal.Actions>\r\n          <Button onClick={this.sendFile} color=\"green\" inverted >\r\n            <Icon name=\"checkmark\" />Send\r\n          </Button>\r\n\r\n          <Button color=\"red\" inverted onClick={closeModal} >\r\n            <Icon name=\"remove\" />Cancel\r\n          </Button>\r\n\r\n        </Modal.Actions>\r\n\r\n      </Modal>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default FileModal\r\n","import React from \"react\";\r\nimport {Progress} from \"semantic-ui-react\";\r\n\r\n\r\nconst ProgressBar = ({uploadState,percentUploaded}) =>(\r\n  uploadState==='uploading' && (\r\n    <Progress className=\"progress_bar\"\r\n      percent={percentUploaded}\r\n      progress\r\n      indicating\r\n      size=\"medium\"\r\n      inverted\r\n      />\r\n  )\r\n)\r\n\r\nexport default ProgressBar;\r\n","import React from \"react\";\r\nimport {uuid} from \"uuidv4\";\r\nimport firebase from \"../../firebase\";\r\nimport { Segment, Button, Input } from \"semantic-ui-react\";\r\nimport { Picker, emojiIndex } from \"emoji-mart\";\r\nimport \"emoji-mart/css/emoji-mart.css\";\r\n\r\nimport FileModal from \"./FileModal\";\r\nimport ProgressBar from \"./ProgressBar\";\r\n\r\nclass MessageForm extends React.Component {\r\n  state = {\r\n    storageRef: firebase.storage().ref(),\r\n    typingRef: firebase.database().ref(\"typing\"),\r\n    uploadTask: null,\r\n    uploadState: \"\",\r\n    percentUploaded: 0,\r\n    message: \"\",\r\n    channel: this.props.currentChannel,\r\n    user: this.props.currentUser,\r\n    loading: false,\r\n    errors: [],\r\n    modal: false,\r\n    emojiPicker: false\r\n  };\r\n\r\n  componentWillUnmount(){\r\n    if(this.state.uploadTask !==null){\r\n      this.state.uploadTask.cancel();\r\n      this.setState({uploadTask:null})\r\n    }\r\n  }\r\n\r\n  openModal = () => this.setState({ modal: true });\r\n\r\n  closeModal = () => this.setState({ modal: false });\r\n\r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  handleKeyDown = event => {\r\n    if (event.keyCode === 13) {\r\n      this.sendMessage();\r\n    }\r\n\r\n    const { message, typingRef, channel, user } = this.state;\r\n\r\n    if (message) {\r\n      typingRef\r\n        .child(channel.id)\r\n        .child(user.uid)\r\n        .set(user.displayName);\r\n    } else {\r\n      typingRef\r\n        .child(channel.id)\r\n        .child(user.uid)\r\n        .remove();\r\n    }\r\n  };\r\n\r\n  handleTogglePicker = () => {\r\n    this.setState({ emojiPicker: !this.state.emojiPicker });\r\n  };\r\n\r\n  handleAddEmoji = emoji => {\r\n    const oldMessage = this.state.message;\r\n    const newMessage = this.colonToUnicode(` ${oldMessage} ${emoji.colons} `);\r\n    this.setState({ message: newMessage, emojiPicker: false });\r\n    setTimeout(() => this.messageInputRef.focus(), 0);\r\n  };\r\n\r\n  colonToUnicode = message => {\r\n    return message.replace(/:[A-Za-z0-9_+-]+:/g, x => {\r\n      x = x.replace(/:/g, \"\");\r\n      let emoji = emojiIndex.emojis[x];\r\n      if (typeof emoji !== \"undefined\") {\r\n        let unicode = emoji.native;\r\n        if (typeof unicode !== \"undefined\") {\r\n          return unicode;\r\n        }\r\n      }\r\n      x = \":\" + x + \":\";\r\n      return x;\r\n    });\r\n  };\r\n\r\n  createMessage = (fileUrl = null) => {\r\n    const message = {\r\n      timestamp: firebase.database.ServerValue.TIMESTAMP,\r\n      user: {\r\n        id: this.state.user.uid,\r\n        name: this.state.user.displayName,\r\n        avatar: this.state.user.photoURL\r\n      }\r\n    };\r\n    if (fileUrl !== null) {\r\n      message[\"image\"] = fileUrl;\r\n    } else {\r\n      message[\"content\"] = this.state.message;\r\n    }\r\n    return message;\r\n  };\r\n\r\n  sendMessage = () => {\r\n    const { getMessagesRef } = this.props;\r\n    const { message, channel, user, typingRef } = this.state;\r\n\r\n    if (message) {\r\n      this.setState({ loading: true });\r\n      getMessagesRef()\r\n        .child(channel.id)\r\n        .push()\r\n        .set(this.createMessage())\r\n        .then(() => {\r\n          this.setState({ loading: false, message: \"\", errors: [] });\r\n          typingRef\r\n            .child(channel.id)\r\n            .child(user.uid)\r\n            .remove();\r\n        })\r\n        .catch(err => {\r\n          console.error(err);\r\n          this.setState({\r\n            loading: false,\r\n            errors: this.state.errors.concat(err)\r\n          });\r\n        });\r\n    } else {\r\n      this.setState({\r\n        errors: this.state.errors.concat({ message: \"Add a message\" })\r\n      });\r\n    }\r\n  };\r\n\r\n  getPath = () => {\r\n    if (this.props.isPrivateChannel) {\r\n      return `chat/private-${this.state.channel.id}`;\r\n    } else {\r\n      return \"chat/public\";\r\n    }\r\n  };\r\n\r\n  uploadFile = (file, metadata) => {\r\n    const pathToUpload = this.state.channel.id;\r\n    const ref = this.props.getMessagesRef();\r\n    const filePath = `${this.getPath()}/${uuid()}.jpg`;\r\n\r\n    this.setState(\r\n      {\r\n        uploadState: \"uploading\",\r\n        uploadTask: this.state.storageRef.child(filePath).put(file, metadata)\r\n      },\r\n      () => {\r\n        this.state.uploadTask.on(\r\n          \"state_changed\",\r\n          snap => {\r\n            const percentUploaded = Math.round(\r\n              (snap.bytesTransferred / snap.totalBytes) * 100\r\n            );\r\n            this.setState({ percentUploaded });\r\n          },\r\n          err => {\r\n            console.error(err);\r\n            this.setState({\r\n              errors: this.state.errors.concat(err),\r\n              uploadState: \"error\",\r\n              uploadTask: null\r\n            });\r\n          },\r\n          () => {\r\n            this.state.uploadTask.snapshot.ref\r\n              .getDownloadURL()\r\n              .then(downloadUrl => {\r\n                this.sendFileMessage(downloadUrl, ref, pathToUpload);\r\n              })\r\n              .catch(err => {\r\n                console.error(err);\r\n                this.setState({\r\n                  errors: this.state.errors.concat(err),\r\n                  uploadState: \"error\",\r\n                  uploadTask: null\r\n                });\r\n              });\r\n          }\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  sendFileMessage = (fileUrl, ref, pathToUpload) => {\r\n    ref\r\n      .child(pathToUpload)\r\n      .push()\r\n      .set(this.createMessage(fileUrl))\r\n      .then(() => {\r\n        this.setState({ uploadState: \"done\" });\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n        this.setState({\r\n          errors: this.state.errors.concat(err)\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    // prettier-ignore\r\n    const { errors, message, loading, modal, uploadState, percentUploaded, emojiPicker } = this.state;\r\n\r\n    return (\r\n      <Segment className=\"message__form\">\r\n        {emojiPicker && (\r\n          <Picker\r\n            set=\"apple\"\r\n            onSelect={this.handleAddEmoji}\r\n            className=\"emojipicker\"\r\n            title=\"Pick your emoji\"\r\n            emoji=\"point_up\"\r\n          />\r\n        )}\r\n        <Input\r\n          fluid\r\n          name=\"message\"\r\n          onChange={this.handleChange}\r\n          onKeyDown={this.handleKeyDown}\r\n          value={message}\r\n          ref={node => (this.messageInputRef = node)}\r\n          style={{ marginBottom: \"0.7em\" }}\r\n          label={\r\n            <Button\r\n              icon={emojiPicker ? \"close\" : \"add\"}\r\n              content={emojiPicker ? \"Close\" : null}\r\n              onClick={this.handleTogglePicker}\r\n            />\r\n          }\r\n          labelPosition=\"left\"\r\n          className={\r\n            errors.some(error => error.message.includes(\"message\"))\r\n              ? \"error\"\r\n              : \"\"\r\n          }\r\n          placeholder=\"Write your message\"\r\n        />\r\n        <Button.Group icon widths=\"2\">\r\n          <Button\r\n            onClick={this.sendMessage}\r\n            disabled={loading}\r\n            color=\"orange\"\r\n            content=\"Add Reply\"\r\n            labelPosition=\"left\"\r\n            icon=\"edit\"\r\n          />\r\n          <Button\r\n            color=\"teal\"\r\n            disabled={uploadState === \"uploading\"}\r\n            onClick={this.openModal}\r\n            content=\"Upload Media\"\r\n            labelPosition=\"right\"\r\n            icon=\"cloud upload\"\r\n          />\r\n        </Button.Group>\r\n        <FileModal\r\n          modal={modal}\r\n          closeModal={this.closeModal}\r\n          uploadFile={this.uploadFile}\r\n        />\r\n        <ProgressBar\r\n          uploadState={uploadState}\r\n          percentUploaded={percentUploaded}\r\n        />\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MessageForm;\r\n","import React from \"react\";\r\nimport {Comment,Image} from \"semantic-ui-react\";\r\nimport moment from 'moment';\r\n\r\nconst isOwnMessage = (message,user) => {\r\n  return message.user.id===user.uid?'message__self':'';\r\n\r\n}\r\n\r\nconst isImage  = (message) => {\r\n  return message.hasOwnProperty('image') && !message.hasOwnProperty('content')\r\n}\r\n\r\nconst timeFromNow = timestamp => moment(timestamp).fromNow();\r\n\r\nconst Message = ({message,user}) =>(\r\n  <Comment>\r\n    <Comment.Avatar src={message.user.avatar} />\r\n    <Comment.Content className={isOwnMessage(message,user)} >\r\n        <Comment.Author as=\"a\">{message.user.name}</Comment.Author>\r\n        <Comment.Metadata>{timeFromNow(message.timestamp)}</Comment.Metadata>\r\n        \r\n        {isImage(message) ? <Image src={message.image} className=\"message__image\"/>:\r\n          <Comment.Text>{message.content}</Comment.Text>\r\n        }\r\n    </Comment.Content>\r\n  </Comment>\r\n)\r\n\r\nexport default Message;\r\n","import React from 'react';\r\n\r\nconst Typing = () => (\r\n  <div className=\"typing\">\r\n    <div className=\"typing__dot\"></div>\r\n    <div className=\"typing__dot\"></div>\r\n    <div className=\"typing__dot\"></div>\r\n  </div>\r\n)\r\n\r\nexport default Typing;\r\n","import React from \"react\";\r\n\r\nconst Skeleton = () => (\r\n  <div className=\"skeleton\">\r\n    <div className=\"skeleton__avatar\" />\r\n    <div className=\"skeleton__author\" />\r\n    <div className=\"skeleton__details\" />\r\n  </div>\r\n);\r\n\r\nexport default Skeleton;\r\n","import React from \"react\";\r\nimport { Segment, Comment } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setUserPosts } from \"../../actions\";\r\nimport firebase from \"../../firebase\";\r\n\r\nimport MessagesHeader from \"./MessagesHeader\";\r\nimport MessageForm from \"./MessageForm\";\r\nimport Message from \"./Message\";\r\nimport Typing from \"./Typing\";\r\nimport Skeleton from \"./Skeleton\";\r\n\r\nclass Messages extends React.Component {\r\n  state = {\r\n    privateChannel: this.props.isPrivateChannel,\r\n    privateMessagesRef: firebase.database().ref(\"privateMessages\"),\r\n    messagesRef: firebase.database().ref(\"messages\"),\r\n    messages: [],\r\n    messagesLoading: true,\r\n    channel: this.props.currentChannel,\r\n    isChannelStarred: false,\r\n    user: this.props.currentUser,\r\n    usersRef: firebase.database().ref(\"users\"),\r\n    numUniqueUsers: \"\",\r\n    searchTerm: \"\",\r\n    searchLoading: false,\r\n    searchResults: [],\r\n    typingRef: firebase.database().ref(\"typing\"),\r\n    typingUsers: [],\r\n    connectedRef: firebase.database().ref(\".info/connected\"),\r\n    listeners: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { channel, user, listeners } = this.state;\r\n\r\n    if (channel && user) {\r\n      this.removeListeners(listeners);\r\n      this.addListeners(channel.id);\r\n      this.addUserStarsListener(channel.id, user.uid);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.removeListeners(this.state.listeners);\r\n    this.state.connectedRef.off();\r\n  }\r\n\r\n  removeListeners = listeners => {\r\n    listeners.forEach(listener => {\r\n      listener.ref.child(listener.id).off(listener.event);\r\n    });\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.messagesEnd) {\r\n      this.scrollToBottom();\r\n    }\r\n  }\r\n\r\n  addToListeners = (id, ref, event) => {\r\n    const index = this.state.listeners.findIndex(listener => {\r\n      return (\r\n        listener.id === id && listener.ref === ref && listener.event === event\r\n      );\r\n    });\r\n\r\n    if (index === -1) {\r\n      const newListener = { id, ref, event };\r\n      this.setState({ listeners: this.state.listeners.concat(newListener) });\r\n    }\r\n  };\r\n\r\n  scrollToBottom = () => {\r\n    this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  addListeners = channelId => {\r\n    this.addMessageListener(channelId);\r\n    this.addTypingListeners(channelId);\r\n  };\r\n\r\n  addTypingListeners = channelId => {\r\n    let typingUsers = [];\r\n    this.state.typingRef.child(channelId).on(\"child_added\", snap => {\r\n      if (snap.key !== this.state.user.uid) {\r\n        typingUsers = typingUsers.concat({\r\n          id: snap.key,\r\n          name: snap.val()\r\n        });\r\n        this.setState({ typingUsers });\r\n      }\r\n    });\r\n    this.addToListeners(channelId, this.state.typingRef, \"child_added\");\r\n\r\n    this.state.typingRef.child(channelId).on(\"child_removed\", snap => {\r\n      const index = typingUsers.findIndex(user => user.id === snap.key);\r\n      if (index !== -1) {\r\n        typingUsers = typingUsers.filter(user => user.id !== snap.key);\r\n        this.setState({ typingUsers });\r\n      }\r\n    });\r\n    this.addToListeners(channelId, this.state.typingRef, \"child_removed\");\r\n\r\n    this.state.connectedRef.on(\"value\", snap => {\r\n      if (snap.val() === true) {\r\n        this.state.typingRef\r\n          .child(channelId)\r\n          .child(this.state.user.uid)\r\n          .onDisconnect()\r\n          .remove(err => {\r\n            if (err !== null) {\r\n              console.error(err);\r\n            }\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  addMessageListener = channelId => {\r\n    let loadedMessages = [];\r\n    const ref = this.getMessagesRef();\r\n    ref.child(channelId).on(\"child_added\", snap => {\r\n      loadedMessages.push(snap.val());\r\n      this.setState({\r\n        messages: loadedMessages,\r\n        messagesLoading: false\r\n      });\r\n      this.countUniqueUsers(loadedMessages);\r\n      this.countUserPosts(loadedMessages);\r\n    });\r\n    this.addToListeners(channelId, ref, \"child_added\");\r\n  };\r\n\r\n  addUserStarsListener = (channelId, userId) => {\r\n    this.state.usersRef\r\n      .child(userId)\r\n      .child(\"starred\")\r\n      .once(\"value\")\r\n      .then(data => {\r\n        if (data.val() !== null) {\r\n          const channelIds = Object.keys(data.val());\r\n          const prevStarred = channelIds.includes(channelId);\r\n          this.setState({ isChannelStarred: prevStarred });\r\n        }\r\n      });\r\n  };\r\n\r\n  getMessagesRef = () => {\r\n    const { messagesRef, privateMessagesRef, privateChannel } = this.state;\r\n    return privateChannel ? privateMessagesRef : messagesRef;\r\n  };\r\n\r\n  handleStar = () => {\r\n    this.setState(\r\n      prevState => ({\r\n        isChannelStarred: !prevState.isChannelStarred\r\n      }),\r\n      () => this.starChannel()\r\n    );\r\n  };\r\n\r\n  starChannel = () => {\r\n    if (this.state.isChannelStarred) {\r\n      this.state.usersRef.child(`${this.state.user.uid}/starred`).update({\r\n        [this.state.channel.id]: {\r\n          name: this.state.channel.name,\r\n          details: this.state.channel.details,\r\n          createdBy: {\r\n            name: this.state.channel.createdBy.name,\r\n            avatar: this.state.channel.createdBy.avatar\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      this.state.usersRef\r\n        .child(`${this.state.user.uid}/starred`)\r\n        .child(this.state.channel.id)\r\n        .remove(err => {\r\n          if (err !== null) {\r\n            console.error(err);\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  handleSearchChange = event => {\r\n    this.setState(\r\n      {\r\n        searchTerm: event.target.value,\r\n        searchLoading: true\r\n      },\r\n      () => this.handleSearchMessages()\r\n    );\r\n  };\r\n\r\n  handleSearchMessages = () => {\r\n    const channelMessages = [...this.state.messages];\r\n    const regex = new RegExp(this.state.searchTerm, \"gi\");\r\n    const searchResults = channelMessages.reduce((acc, message) => {\r\n      if (\r\n        (message.content && message.content.match(regex)) ||\r\n        message.user.name.match(regex)\r\n      ) {\r\n        acc.push(message);\r\n      }\r\n      return acc;\r\n    }, []);\r\n    this.setState({ searchResults });\r\n    setTimeout(() => this.setState({ searchLoading: false }), 1000);\r\n  };\r\n\r\n  countUniqueUsers = messages => {\r\n    const uniqueUsers = messages.reduce((acc, message) => {\r\n      if (!acc.includes(message.user.name)) {\r\n        acc.push(message.user.name);\r\n      }\r\n      return acc;\r\n    }, []);\r\n    const plural = uniqueUsers.length > 1 || uniqueUsers.length === 0;\r\n    const numUniqueUsers = `${uniqueUsers.length} user${plural ? \"s\" : \"\"}`;\r\n    this.setState({ numUniqueUsers });\r\n  };\r\n\r\n  countUserPosts = messages => {\r\n    let userPosts = messages.reduce((acc, message) => {\r\n      if (message.user.name in acc) {\r\n        acc[message.user.name].count += 1;\r\n      } else {\r\n        acc[message.user.name] = {\r\n          avatar: message.user.avatar,\r\n          count: 1\r\n        };\r\n      }\r\n      return acc;\r\n    }, {});\r\n    this.props.setUserPosts(userPosts);\r\n  };\r\n\r\n  displayMessages = messages =>\r\n    messages.length > 0 &&\r\n    messages.map(message => (\r\n      <Message\r\n        key={message.timestamp}\r\n        message={message}\r\n        user={this.state.user}\r\n      />\r\n    ));\r\n\r\n  displayChannelName = channel => {\r\n    return channel\r\n      ? `${this.state.privateChannel ? \"@\" : \"#\"}${channel.name}`\r\n      : \"\";\r\n  };\r\n\r\n  displayTypingUsers = users =>\r\n    users.length > 0 &&\r\n    users.map(user => (\r\n      <div\r\n        style={{ display: \"flex\", alignItems: \"center\", marginBottom: \"0.2em\" }}\r\n        key={user.id}\r\n      >\r\n        <span className=\"user__typing\">{user.name} is typing</span> <Typing />\r\n      </div>\r\n    ));\r\n\r\n  displayMessageSkeleton = loading =>\r\n    loading ? (\r\n      <React.Fragment>\r\n        {[...Array(10)].map((_, i) => (\r\n          <Skeleton key={i} />\r\n        ))}\r\n      </React.Fragment>\r\n    ) : null;\r\n\r\n  render() {\r\n    // prettier-ignore\r\n    const { messagesRef, messages, channel, user, numUniqueUsers, searchTerm, searchResults, searchLoading, privateChannel, isChannelStarred, typingUsers, messagesLoading } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <MessagesHeader\r\n          channelName={this.displayChannelName(channel)}\r\n          numUniqueUsers={numUniqueUsers}\r\n          handleSearchChange={this.handleSearchChange}\r\n          searchLoading={searchLoading}\r\n          isPrivateChannel={privateChannel}\r\n          handleStar={this.handleStar}\r\n          isChannelStarred={isChannelStarred}\r\n        />\r\n\r\n        <Segment>\r\n          <Comment.Group className=\"messages\">\r\n            {this.displayMessageSkeleton(messagesLoading)}\r\n            {searchTerm\r\n              ? this.displayMessages(searchResults)\r\n              : this.displayMessages(messages)}\r\n            {this.displayTypingUsers(typingUsers)}\r\n            <div ref={node => (this.messagesEnd = node)} />\r\n          </Comment.Group>\r\n        </Segment>\r\n\r\n        <MessageForm\r\n          messagesRef={messagesRef}\r\n          currentChannel={channel}\r\n          currentUser={user}\r\n          isPrivateChannel={privateChannel}\r\n          getMessagesRef={this.getMessagesRef}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  { setUserPosts }\r\n)(Messages);\r\n","import React from \"react\";\r\nimport {\r\n  Segment,\r\n  Accordion,\r\n  Header,\r\n  Icon,\r\n  Image,\r\n  List\r\n} from \"semantic-ui-react\";\r\n\r\nclass MetaPanel extends React.Component {\r\n  state = {\r\n    channel: this.props.currentChannel,\r\n    privateChannel: this.props.isPrivateChannel,\r\n    activeIndex: 0\r\n  };\r\n\r\n  setActiveIndex = (event, titleProps) => {\r\n    const { index } = titleProps;\r\n    const { activeIndex } = this.state;\r\n    const newIndex = activeIndex === index ? -1 : index;\r\n    this.setState({ activeIndex: newIndex });\r\n  };\r\n\r\n  formatCount = num => (num > 1 || num === 0 ? `${num} posts` : `${num} post`);\r\n\r\n  displayTopPosters = posts =>\r\n    Object.entries(posts)\r\n      .sort((a, b) => b[1] - a[1])\r\n      .map(([key, val], i) => (\r\n        <List.Item key={i}>\r\n          <Image avatar src={val.avatar} />\r\n          <List.Content>\r\n            <List.Header as=\"a\">{key}</List.Header>\r\n            <List.Description>{this.formatCount(val.count)}</List.Description>\r\n          </List.Content>\r\n        </List.Item>\r\n      ))\r\n      .slice(0, 5);\r\n\r\n  render() {\r\n    const { activeIndex, privateChannel, channel } = this.state;\r\n    const { userPosts } = this.props;\r\n\r\n    if (privateChannel) return null;\r\n\r\n    return (\r\n      <Segment loading={!channel}>\r\n        <Header as=\"h3\" attached=\"top\">\r\n          About # {channel && channel.name}\r\n        </Header>\r\n        <Accordion styled attached=\"true\">\r\n          <Accordion.Title\r\n            active={activeIndex === 0}\r\n            index={0}\r\n            onClick={this.setActiveIndex}\r\n          >\r\n            <Icon name=\"dropdown\" />\r\n            <Icon name=\"info\" />\r\n            Channel Details\r\n          </Accordion.Title>\r\n          <Accordion.Content active={activeIndex === 0}>\r\n            {channel && channel.details}\r\n          </Accordion.Content>\r\n\r\n          <Accordion.Title\r\n            active={activeIndex === 1}\r\n            index={1}\r\n            onClick={this.setActiveIndex}\r\n          >\r\n            <Icon name=\"dropdown\" />\r\n            <Icon name=\"user circle\" />\r\n            Top Posters\r\n          </Accordion.Title>\r\n          <Accordion.Content active={activeIndex === 1}>\r\n            <List>{userPosts && this.displayTopPosters(userPosts)}</List>\r\n          </Accordion.Content>\r\n\r\n          <Accordion.Title\r\n            active={activeIndex === 2}\r\n            index={2}\r\n            onClick={this.setActiveIndex}\r\n          >\r\n            <Icon name=\"dropdown\" />\r\n            <Icon name=\"pencil alternate\" />\r\n            Created By\r\n          </Accordion.Title>\r\n          <Accordion.Content active={activeIndex === 2}>\r\n            <Header as=\"h3\">\r\n              <Image circular src={channel && channel.createdBy.avatar} />\r\n              {channel && channel.createdBy.name}\r\n            </Header>\r\n          </Accordion.Content>\r\n        </Accordion>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MetaPanel;\r\n","import React from \"react\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport \"./App.css\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport ColorPanel from \"./ColorPanel/ColorPanel\";\r\nimport SidePanel from \"./SidePanel/SidePanel\";\r\nimport Messages from \"./Messages/Messages\";\r\nimport MetaPanel from \"./MetaPanel/MetaPanel\";\r\n\r\nconst App = ({ currentUser, currentChannel, isPrivateChannel , userPosts , primaryColor , secondaryColor  }) => (\r\n  <Grid columns=\"equal\" className=\"app\" style={{ background: secondaryColor }}>\r\n    <ColorPanel\r\n      key={currentUser && currentUser.name}\r\n      currentUser={currentUser}\r\n     />\r\n    <SidePanel\r\n      primaryColor={primaryColor}\r\n     key={currentUser && currentUser.uid} currentUser={currentUser} />\r\n\r\n    <Grid.Column style={{ marginLeft: 320 }}>\r\n      <Messages\r\n        key={currentChannel && currentChannel.id}\r\n        currentChannel={currentChannel}\r\n        currentUser={currentUser}\r\n        isPrivateChannel={isPrivateChannel}\r\n      />\r\n    </Grid.Column>\r\n\r\n    <Grid.Column width={4}>\r\n      <MetaPanel\r\n        key={currentChannel && currentChannel.name}\r\n        userPosts={userPosts}\r\n        currentChannel={currentChannel}\r\n       isPrivateChannel={isPrivateChannel}/>\r\n    </Grid.Column>\r\n  </Grid>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  currentUser: state.user.currentUser,\r\n  currentChannel: state.channel.currentChannel,\r\n  isPrivateChannel: state.channel.isPrivateChannel,\r\n  userPosts:state.channel.userPosts,\r\n  primaryColor:state.colors.primaryColor,\r\n  secondaryColor:state.colors.secondaryColor\r\n});\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport {Grid,Form,Segment,Button,Header,Message,Icon} from \"semantic-ui-react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport firebase from \"../../firebase\";\r\n\r\n\r\n\r\n\r\nclass Login extends React.Component{\r\n  state={\r\n    email:\"\",\r\n    password:\"\",\r\n    errors:[],\r\n    loading:false,\r\n  };\r\n  handleChange=event=>{\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    })\r\n  };\r\n\r\n\r\n\r\n  displayErros = errors => errors.map((error,i)=>\r\n    <p key={i}>{error.message}\r\n    </p>\r\n\r\n  )\r\n\r\n\r\n\r\n  handleSubmit = event =>{\r\n    event.preventDefault();\r\n    if(this.isFormValid(this.state)){\r\n      this.setState({errors:[],loading:true});\r\n      firebase.auth().signInWithEmailAndPassword(this.state.email,this.state.password)\r\n      .then(signedInUser =>{\r\n        console.log(signedInUser)\r\n        \r\n      })\r\n      .catch(err =>{\r\n        console.log(err);\r\n        this.setState({\r\n          errors:this.state.errors.concat(err),\r\n          loading:false\r\n        })\r\n      })\r\n\r\n    }\r\n\r\n  }\r\n\r\n  isFormValid =({email,password}) =>email && password ;\r\n\r\n\r\n  render(){\r\n    const {email,password\r\n      ,errors,loading}=this.state;\r\n    return(\r\n      <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"app\">\r\n        <Grid.Column style={{ maxWidth:450 }}>\r\n          <Header as=\"h3\" icon color=\"grey\" textAlign=\"center\">\r\n            <Icon name=\"code branch\" color=\"blue\" />\r\n              Login\r\n          </Header>\r\n          <Form onSubmit={this.handleSubmit} size=\"large\">\r\n            <Segment stacked>\r\n\r\n\r\n              <Form.Input fluid name=\"email\" icon=\"mail\" iconPosition=\"left\"\r\n              placeholder=\"Enter Email\" onChange={this.handleChange} type=\"email\"\r\n              value={email} />\r\n\r\n              <Form.Input fluid name=\"password\" icon=\"lock\" iconPosition=\"left\"\r\n              placeholder=\"Enter Password\" onChange={this.handleChange} type=\"password\"\r\n              value={password} />\r\n\r\n\r\n\r\n              <Button disabled={loading}\r\n              className={loading? \"loading\":\"\"}\r\n               color=\"black\"\r\n               fluid size=\"large\">Submit</Button>\r\n\r\n            </Segment>\r\n          </Form>\r\n          {errors.length > 0 && (\r\n            <Message error>\r\n              {this.displayErros(errors)}\r\n            </Message>\r\n          )}\r\n\r\n          <Message><Link to=\"/register\">Don't have an account?Create Now  </Link> </Message>\r\n\r\n        </Grid.Column>\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\nexport default Login\r\n","import React from \"react\";\r\nimport {Grid,Form,Segment,Button,Header,Message,Icon} from \"semantic-ui-react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport firebase from \"../../firebase\";\r\nimport md5 from \"md5\";\r\n\r\n\r\n\r\nclass Register extends React.Component{\r\n  state={\r\n    username:\"\",\r\n    email:\"\",\r\n    password:\"\",\r\n    passwordConfirmation:\"\",\r\n    errors:[],\r\n    loading:false,\r\n    usersRef:firebase.database().ref('users')\r\n  };\r\n  handleChange=event=>{\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    })\r\n  };\r\n\r\n  isFormValid = ()=>{\r\n    let errors=[];\r\n    let error;\r\n    if(this.isFormEmpty(this.state)){\r\n      error={message:\"Fill all fields\"}\r\n      this.setState({errors:errors.concat(error) });\r\n      return false;\r\n    }else if(!this.isPasswordValid(this.state)){\r\n      error={message : \"Password is invalid\"};\r\n      this.setState({errors:errors.concat(error)});\r\n      return false;\r\n    }else{\r\n      return true;\r\n    }\r\n  }\r\n\r\n  isPasswordValid = ({password,passwordConfirmation}) =>{\r\n    if(password.length<6 || passwordConfirmation.length <6){\r\n      return false;\r\n    }else if(password !== passwordConfirmation){\r\n      return false;\r\n    }else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  displayErros = errors => errors.map((error,i)=>\r\n    <p key={i}>{error.message}\r\n    </p>\r\n\r\n  )\r\n\r\n  isFormEmpty=({username,email,password,passwordConfirmation})=>{\r\n    return !username.length || !email.length ||\r\n    !password.length || !passwordConfirmation.length\r\n\r\n  }\r\n\r\n  handleSubmit = event =>{\r\n    event.preventDefault();\r\n    if(this.isFormValid()){\r\n      this.setState({errors:[],loading:true});\r\n      firebase.auth().createUserWithEmailAndPassword\r\n      (this.state.email,this.state.password)\r\n      .then(createdUser =>{\r\n        console.log(createdUser);\r\n        createdUser.user.updateProfile({\r\n          displayName:this.state.username,\r\n          photoURL:`http://gravatar.com/avatar/${md5(createdUser.user.email)}d=identicon`\r\n        })\r\n        .then(()=>{\r\n            this.saveUser(createdUser).then(()=>{\r\n              console.log('user saved')\r\n              this.setState({loading:false})\r\n            })\r\n        })\r\n        .catch(err =>{\r\n          console.error(err);\r\n          this.setState({errors:this.state.errors.concat(err),loading:false})\r\n        })\r\n\r\n      })\r\n      .catch(err =>{\r\n        console.error(err);\r\n        this.setState({loading:false})\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  saveUser = createdUser =>{\r\n    return this.state.usersRef.child(createdUser.user.uid).set({\r\n      name:createdUser.user.displayName,\r\n      avatar:createdUser.user.photoURL\r\n    })\r\n  }\r\n\r\n  render(){\r\n    const {username,email,password\r\n      ,passwordConfirmation,errors,loading}=this.state;\r\n    return(\r\n      <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"app\">\r\n        <Grid.Column style={{ maxWidth:450 }}>\r\n          <Header as=\"h3\" icon color=\"grey\" textAlign=\"center\">\r\n            <Icon name=\"handshake outline\" color=\"blue\" />\r\n              Register\r\n          </Header>\r\n          <Form onSubmit={this.handleSubmit} size=\"large\">\r\n            <Segment stacked>\r\n              <Form.Input fluid name=\"username\" icon=\"user\" iconPosition=\"left\"\r\n              placeholder=\"Enter Username\" onChange={this.handleChange} type=\"text\"\r\n              value={username} />\r\n\r\n              <Form.Input fluid name=\"email\" icon=\"mail\" iconPosition=\"left\"\r\n              placeholder=\"Enter Email\" onChange={this.handleChange} type=\"email\"\r\n              value={email} />\r\n\r\n              <Form.Input fluid name=\"password\" icon=\"lock\" iconPosition=\"left\"\r\n              placeholder=\"Enter Password\" onChange={this.handleChange} type=\"password\"\r\n              value={password} />\r\n\r\n              <Form.Input fluid name=\"passwordConfirmation\" icon=\"repeat\" iconPosition=\"left\"\r\n              placeholder=\"Confirm password\" onChange={this.handleChange} type=\"password\"\r\n              value={passwordConfirmation} />\r\n\r\n              <Button disabled={loading}\r\n              className={loading? \"loading\":\"\"}\r\n               color=\"black\"\r\n               fluid size=\"large\">Submit</Button>\r\n\r\n            </Segment>\r\n          </Form>\r\n          {errors.length > 0 && (\r\n            <Message error>\r\n              {this.displayErros(errors)}\r\n            </Message>\r\n          )}\r\n\r\n          <Message><Link to=\"/login\">Already a user? Login  </Link> </Message>\r\n\r\n        </Grid.Column>\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\nexport default Register\r\n","import {combineReducers} from \"redux\";\r\nimport * as actionTypes from \"../actions/types\";\r\n\r\n\r\nconst initialUserState = {\r\n  currentUser:null,\r\n  isLoading:true\r\n}\r\n\r\nconst user_reducer = (state=initialUserState,action) =>{\r\n  switch(action.type){\r\n    case actionTypes.SET_USER:\r\n      return {\r\n        currentUser:action.payload.currentUser,\r\n        isLoading:false\r\n      };\r\n      case actionTypes.CLEAR_USER:\r\n        return {\r\n          ...state,\r\n          isLoading:false\r\n        }\r\n      default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst initialChannelState={\r\n  currentChannel:null,\r\n  isPrivateChannel:false,\r\n  userPosts:null\r\n}\r\n\r\nconst channel_reducer = (state=initialChannelState,action) =>{\r\n  switch(action.type){\r\n    case actionTypes.SET_CURRENT_CHANNEL:\r\n      return{\r\n        ...state,\r\n        currentChannel:action.payload.currentChannel\r\n      }\r\n\r\n      case actionTypes.SET_PRIVATE_CHANNEL:\r\n        return{\r\n          ...state,\r\n          isPrivateChannel:action.payload.isPrivateChannel\r\n        }\r\n\r\n      case actionTypes.SET_USER_POSTS:\r\n      return {\r\n        ...state,\r\n        userPosts:action.payload.userPosts\r\n      }\r\n\r\n      default:\r\n              return state;\r\n  }\r\n}\r\n\r\nconst initialColorsState = {\r\n  primaryColor:'#4c3c4c',\r\n  secondaryColor:'#eee'\r\n}\r\n\r\nconst colors_reducer = (state=initialColorsState,action) =>{\r\n  switch(action.type){\r\n    case actionTypes.SET_COLORS:\r\n      return{\r\n        primaryColor:action.payload.primaryColor,\r\n        secondaryColor:action.payload.secondaryColor\r\n      }\r\n      default:\r\n        return state;\r\n  }\r\n}\r\n\r\n\r\nconst rootReducer=combineReducers({\r\n  user:user_reducer,\r\n  channel:channel_reducer,\r\n  colors:colors_reducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\r\nimport {Loader,Dimmer} from \"semantic-ui-react\";\r\n\r\nconst Spinner = () =>(\r\n  <Dimmer active>\r\n    <Loader size=\"huge\" content={\"Chat Loading...\"} />\r\n  </Dimmer>\r\n)\r\n\r\nexport default Spinner;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport Login from \"./components/Auth/Login.js\";\nimport Register from \"./components/Auth/Register\";\nimport {BrowserRouter as Router,Switch,Route, withRouter} from \"react-router-dom\";\nimport 'semantic-ui-css/semantic.min.css';\nimport firebase from \"./firebase\";\nimport {createStore} from \"redux\";\nimport {Provider,connect} from \"react-redux\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport rootReducer from \"./reducers\";\nimport {setUser,clearUser} from \"./actions\"\nimport Spinner from \"./Spinner\";\n\n\nconst store=createStore(rootReducer,composeWithDevTools());\n\nclass Root extends React.Component{\n  componentDidMount(){\n    firebase.auth().onAuthStateChanged(user=>{\n      if(user){\n        this.props.setUser(user);\n        this.props.history.push(\"/\")\n      }else{\n        this.props.history.push('/login');\n        this.props.clearUser();\n      }\n\n    }\n  )\n  }\n  render(){\n    return this.props.isLoading ? <Spinner /> : (\n\n        <Switch>\n          <Route exact path=\"/\" component={App} />\n          <Route path=\"/login\" component={Login}/>\n          <Route path=\"/register\" component={Register} />\n\n        </Switch>\n\n    )\n  }\n}\n\nconst mapStateFromProps = state =>({\n  isLoading:state.user.isLoading\n})\n\nconst RootWithAuth=withRouter(\n  connect(mapStateFromProps\n    ,{setUser,clearUser}) (Root));\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n        <RootWithAuth />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}